import connectDB from './config/database_connection';
import { Student } from './models/models_student';
import { Teacher } from './models/models_teacher';
import { Grade } from './models/models_grade';
import bcrypt from 'bcryptjs';

const seedStudents = [
  {
    id: "ST001",
    name: "◊ê◊ë◊ô◊í◊ô◊ú ◊®◊ï◊ñ◊ü",
    age: 12,
    phone: "052-1234567",
    grade: "◊ï'",
    address: {
      city: "◊®◊û◊™ ◊í◊ü",
      street: "◊ë◊ô◊ú◊ï",
      building: "8",
      apartment: "15"
    },
    password: "student123"
  },
  {
    id: "ST002", 
    name: "◊ô◊ï◊†◊™◊ü ◊©◊û◊¢◊ï◊ü",
    age: 11,
    phone: "054-2345678",
    grade: "◊î'",
    address: {
      city: "◊í◊ë◊¢◊™◊ô◊ô◊ù",
      street: "◊ß◊ò◊û◊ï◊ü",
      building: "12",
      apartment: "4"
    },
    password: "student456"
  },
  {
    id: "ST003",
    name: "◊™◊û◊® ◊ê◊ë◊®◊î◊ù",
    age: 13,
    phone: "050-3456789",
    grade: "◊ñ'",
    address: {
      city: "◊î◊®◊¶◊ú◊ô◊î",
      street: "◊°◊ï◊ß◊ï◊ú◊ï◊ë",
      building: "6",
      apartment: "9"
    },
    password: "student789"
  },
  {
    id: "ST004",
    name: "◊ì◊†◊ô◊ê◊ú ◊õ◊î◊ü",
    age: 10,
    phone: "053-4567890",
    grade: "◊ì'",
    address: {
      city: "◊õ◊§◊® ◊°◊ë◊ê",
      street: "◊ï◊ô◊ô◊¶◊û◊ü",
      building: "20",
      apartment: "2"
    },
    password: "student101"
  },
  {
    id: "ST005",
    name: "◊®◊ï◊™ ◊ú◊ë◊ô◊ê",
    age: 12,
    phone: "058-5678901",
    grade: "◊ï'",
    address: {
      city: "◊®◊ê◊©◊ï◊ü ◊ú◊¶◊ô◊ï◊ü",
      street: "◊î◊®◊¶◊ú",
      building: "14",
      apartment: "7"
    },
    password: "student202"
  },
  {
    id: "ST006",
    name: "◊¢◊û◊ô◊™ ◊ë◊®◊ß",
    age: 14,
    phone: "059-6789012",
    grade: "◊ó'",
    address: {
      city: "◊ó◊ï◊ú◊ï◊ü",
      street: "◊°◊ï◊ß◊ï◊ú◊ï◊ë",
      building: "3",
      apartment: "11"
    },
    password: "student303"
  },
  {
    id: "ST007",
    name: "◊û◊ô◊õ◊ú ◊ì◊ï◊ì",
    age: 11,
    phone: "050-7890123",
    grade: "◊î'",
    address: {
      city: "◊ë◊™ ◊ô◊ù",
      street: "◊ë◊ü ◊í◊ï◊®◊ô◊ï◊ü",
      building: "18",
      apartment: "5"
    },
    password: "student404"
  },
  {
    id: "ST008",
    name: "◊ê◊ú◊ô◊¢◊ñ◊® ◊û◊ú◊õ◊ê",
    age: 13,
    phone: "052-8901234",
    grade: "◊ñ'",
    address: {
      city: "◊ú◊ï◊ì",
      street: "◊î◊†◊ë◊ô◊ê◊ô◊ù",
      building: "9",
      apartment: "13"
    },
    password: "student505"
  }
];

const seedTeachers = [
  {
    id: 1,
    tz: "123456789",
    firstName: "◊û◊®◊ô◊ù",
    lastName: "◊í◊ï◊ú◊ì◊ë◊®◊í",
    class: "◊ê'",
    phone: "050-1111111",
    address: {
      city: "◊™◊ú ◊ê◊ë◊ô◊ë",
      street: "◊ì◊ô◊ñ◊†◊í◊ï◊£",
      building: "45",
      apartment: "12"
    },
    password: "teacher123"
  },
  {
    id: 2,
    tz: "234567890",
    firstName: "◊ô◊ï◊°◊£",
    lastName: "◊ê◊ë◊®◊û◊ï◊ë◊ô◊•",
    class: "◊ë'",
    phone: "052-2222222",
    address: {
      city: "◊ó◊ô◊§◊î",
      street: "◊î◊®◊¶◊ú",
      building: "23",
      apartment: "8"
    },
    password: "teacher456"
  },
  {
    id: 3,
    tz: "345678901",
    firstName: "◊©◊ï◊©◊†◊î",
    lastName: "◊õ◊•",
    class: "◊í'",
    phone: "054-3333333",
    address: {
      city: "◊ô◊®◊ï◊©◊ú◊ô◊ù",
      street: "◊ô◊§◊ï",
      building: "67",
      apartment: "3"
    },
    password: "teacher789"
  },
  {
    id: 4,
    tz: "456789012",
    firstName: "◊ê◊ë◊®◊î◊ù",
    lastName: "◊©◊§◊ô◊®◊ê",
    class: "◊ì'",
    phone: "053-4444444",
    address: {
      city: "◊ë◊ê◊® ◊©◊ë◊¢",
      street: "◊®◊ô◊†◊í◊ú◊ë◊ú◊ï◊ù",
      building: "31",
      apartment: "6"
    },
    password: "teacher101"
  },
  {
    id: 5,
    tz: "567890123",
    firstName: "◊®◊ë◊ß◊î",
    lastName: "◊û◊ñ◊®◊ó◊ô",
    class: "◊î'",
    phone: "058-5555555",
    address: {
      city: "◊ê◊©◊ß◊ú◊ï◊ü",
      street: "◊†◊ô◊¶◊†◊î",
      building: "14",
      apartment: "10"
    },
    password: "teacher202"
  },
  {
    id: 6,
    tz: "678901234",
    firstName: "◊û◊©◊î",
    lastName: "◊ú◊ï◊ô",
    class: "◊ï'",
    phone: "059-6666666",
    address: {
      city: "◊†◊™◊†◊ô◊î",
      street: "◊î◊®◊ë ◊ß◊ï◊ß",
      building: "52",
      apartment: "4"
    },
    password: "teacher303"
  }
];

const seedGrades = [
  // ST001 - ◊ê◊ë◊ô◊í◊ô◊ú ◊®◊ï◊ñ◊ü
  { studentId: "ST001", subject: "◊û◊™◊û◊ò◊ô◊ß◊î", score: 94 },
  { studentId: "ST001", subject: "◊ê◊†◊í◊ú◊ô◊™", score: 87 },
  { studentId: "ST001", subject: "◊û◊ì◊¢◊ô◊ù", score: 91 },
  { studentId: "ST001", subject: "◊°◊§◊®◊ï◊™", score: 89 },

  // ST002 - ◊ô◊ï◊†◊™◊ü ◊©◊û◊¢◊ï◊ü  
  { studentId: "ST002", subject: "◊û◊™◊û◊ò◊ô◊ß◊î", score: 78 },
  { studentId: "ST002", subject: "◊ê◊†◊í◊ú◊ô◊™", score: 82 },
  { studentId: "ST002", subject: "◊í◊ê◊ï◊í◊®◊§◊ô◊î", score: 85 },
  { studentId: "ST002", subject: "◊î◊ô◊°◊ò◊ï◊®◊ô◊î", score: 77 },

  // ST003 - ◊™◊û◊® ◊ê◊ë◊®◊î◊ù
  { studentId: "ST003", subject: "◊û◊™◊û◊ò◊ô◊ß◊î", score: 96 },
  { studentId: "ST003", subject: "◊ê◊†◊í◊ú◊ô◊™", score: 93 },
  { studentId: "ST003", subject: "◊§◊ô◊ñ◊ô◊ß◊î", score: 88 },
  { studentId: "ST003", subject: "◊õ◊ô◊û◊ô◊î", score: 92 },

  // ST004 - ◊ì◊†◊ô◊ê◊ú ◊õ◊î◊ü
  { studentId: "ST004", subject: "◊û◊™◊û◊ò◊ô◊ß◊î", score: 65 },
  { studentId: "ST004", subject: "◊ê◊†◊í◊ú◊ô◊™", score: 71 },
  { studentId: "ST004", subject: "◊û◊ó◊©◊ë◊ô◊ù", score: 85 },
  { studentId: "ST004", subject: "◊ê◊ï◊û◊†◊ï◊™", score: 88 },

  // ST005 - ◊®◊ï◊™ ◊ú◊ë◊ô◊ê
  { studentId: "ST005", subject: "◊û◊™◊û◊ò◊ô◊ß◊î", score: 83 },
  { studentId: "ST005", subject: "◊ê◊†◊í◊ú◊ô◊™", score: 79 },
  { studentId: "ST005", subject: "◊ë◊ô◊ï◊ú◊ï◊í◊ô◊î", score: 86 },
  { studentId: "ST005", subject: "◊ú◊©◊ï◊ü", score: 81 },

  // ST006 - ◊¢◊û◊ô◊™ ◊ë◊®◊ß
  { studentId: "ST006", subject: "◊û◊™◊û◊ò◊ô◊ß◊î", score: 72 },
  { studentId: "ST006", subject: "◊ê◊†◊í◊ú◊ô◊™", score: 68 },
  { studentId: "ST006", subject: "◊î◊ô◊°◊ò◊ï◊®◊ô◊î", score: 75 },
  { studentId: "ST006", subject: "◊ê◊ñ◊®◊ó◊ï◊™", score: 73 },

  // ST007 - ◊û◊ô◊õ◊ú ◊ì◊ï◊ì
  { studentId: "ST007", subject: "◊û◊™◊û◊ò◊ô◊ß◊î", score: 90 },
  { studentId: "ST007", subject: "◊ê◊†◊í◊ú◊ô◊™", score: 86 },
  { studentId: "ST007", subject: "◊û◊ï◊ñ◊ô◊ß◊î", score: 95 },
  { studentId: "ST007", subject: "◊°◊§◊ï◊®◊ò", score: 92 },

  // ST008 - ◊ê◊ú◊ô◊¢◊ñ◊® ◊û◊ú◊õ◊ê
  { studentId: "ST008", subject: "◊û◊™◊û◊ò◊ô◊ß◊î", score: 58 },
  { studentId: "ST008", subject: "◊ê◊†◊í◊ú◊ô◊™", score: 62 },
  { studentId: "ST008", subject: "◊û◊ì◊¢◊ô◊ù", score: 67 },
  { studentId: "ST008", subject: "◊™◊†◊ö", score: 84 }
];

const seedDatabase = async () => {
  try {
    console.log('üå± Starting database seeding...');
    
    await connectDB();

    // Clear existing data
    console.log('üßπ Clearing existing data...');
    await Student.deleteMany({});
    await Teacher.deleteMany({});
    await Grade.deleteMany({});

    // Hash passwords and create students
    console.log('üë®‚Äçüéì Creating students...');
    const studentsWithHashedPasswords = await Promise.all(
      seedStudents.map(async (student) => ({
        ...student,
        password: await bcrypt.hash(student.password, 10)
      }))
    );
    await Student.insertMany(studentsWithHashedPasswords);

    // Hash passwords and create teachers
    console.log('üë©‚Äçüè´ Creating teachers...');
    const teachersWithHashedPasswords = await Promise.all(
      seedTeachers.map(async (teacher) => ({
        ...teacher,
        password: await bcrypt.hash(teacher.password, 10)
      }))
    );
    await Teacher.insertMany(teachersWithHashedPasswords);

    // Create grades
    console.log('üìä Creating grades...');
    await Grade.insertMany(seedGrades);

    console.log('‚úÖ Database seeding completed successfully!');
    console.log(`üìà Created: ${seedStudents.length} students, ${seedTeachers.length} teachers, ${seedGrades.length} grades`);
    
    console.log('\nüîê Login credentials:');
    console.log('Students:');
    seedStudents.forEach(student => {
      console.log(`  ID: ${student.id}, Password: ${student.password}`);
    });
    console.log('\nTeachers:');
    seedTeachers.forEach(teacher => {
      console.log(`  ID: ${teacher.id}, Password: ${teacher.password}`);
    });

  } catch (error) {
    console.error('‚ùå Error seeding database:', error);
  } finally {
    // await disconnectDB();
  }
};

// Run seeding if this file is executed directly
if (require.main === module) {
  seedDatabase();
}

export { seedDatabase };